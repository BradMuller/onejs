#!/usr/bin/env node

var one = require('../lib/one'),
    puts = require('sys').puts,
    buildOptions = {};

var REV = '1.1.0';

var opt = require('optimist'),
    argv = opt
    .usage('Usage: $0 [ACTION] [MANIFEST] [OPTIONS]')
    .options('quiet',{
      'describe':'Make console output less verbose'
    })
    .options('verbose',{
      'describe':'Tell what\'s going on by being verbose.'
    })
    .options('version',{
      'describe':'Show version and exit'
    })
    .options('help',{
      'describe':'Show help.'
    })
    .argv;

function build(){
  var manifest = argv._[1] || 'package.json',
      target = argv._[2];

  one.build({ 'manifestPath':manifest }, function(error, pkg){
    if(error) throw error;
    if(target){
      one.save(target, pkg, function(error){
        if(error) throw error;
        process.exit(0);
      });
    } else {
      puts(pkg);
    }
  });
}

function help(){
  opt.showHelp(puts);
  process.exit(0);
}

function server(){
  var manifest = argv._[1] || 'package.json',
      host = argv._[3] || '127.0.0.1',
      port = argv._[2] || 1338;

  one.publish({ 'manifestPath':manifest, 'host':host, 'port':port });
}

function setupNodeDeps(){
  var modules = argv._.slice(1);
  modules.push(function(error){
    if(error) throw error;
  });
  one.setupNodeModules.apply(undefined, modules);
}

function verbosity(){
  one.verbosity('INFO');
  argv.quiet && one.quiet(true);
  argv.verbose && one.verbose(true);
}

function version(){
  puts('OneJS v' + REV);
  process.exit(0);
}

var action = argv._[0];

verbosity();

switch(action){
  case 'build': build(); break;
  case 'server': server(); break;
  case 'install': setupNodeDeps(); break;
  default:
    if(argv.version){
      version();
    } else {
      help();
    }
}

